pipeline {
    agent any
    environment {
        AWS_REGION = "us-east-1"
        STACK_NAME = "todo-list-aws"
        STAGE = "staging"
    }
    stages {
        stage('GetCode') {
            steps {
                git branch: 'develop', url: 'https://github.com/MVBieto/todo-list-aws-master.git'
                stash name: 'source-code', includes: '**'
            }
        }
        stage('Pruebas estaticas') {
            parallel {
                stage('Static') {
                    steps {
                        unstash 'source-code'
                        catchError(buildResult: 'UNSTABLE', stageResult: 'FAILURE') {
                            sh '''
                                flake8 --exit-zero --format=pylint src >flake8.out
                            '''
                            recordIssues tools: [flake8(name: 'Flake8', pattern: 'flake8.out')], qualityGates: []
                        }
                    }
                }
                stage('Security') {
                    steps {
                        unstash 'source-code'
                        sh '''
                            bandit --exit-zero -r . -f custom -o bandit.out --msg-template "{abspath}:{line}: [{test_id}] {msg}"
                        '''
                        catchError(buildResult: 'UNSTABLE', stageResult: 'FAILURE') {
                            recordIssues tools: [pyLint(name: 'Bandit', pattern: 'bandit.out')], qualityGates: []
                        }
                    }
                }
            }
        }
        stage('Build Application') {
            steps {
                script {
                    sh '''
                    ls
                    sam build
                    '''
                }
            }
        }
        stage('Deploy to AWS') {
            steps {
                script {
                    sh '''
                    echo "Deploying application to AWS..."
                    sam deploy --stack-name $STACK_NAME \
                               --region $AWS_REGION \
                               --parameter-overrides Stage=$STAGE \
                               --capabilities CAPABILITY_IAM \
                               --confirm-changeset --no-fail-on-empty-changeset
                    '''
                }
            }
        }
    }
}